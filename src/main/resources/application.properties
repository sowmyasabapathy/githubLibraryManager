## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

#Server
spring.datasource.url= jdbc:mysql://localhost:3306/librarymanager?useSSL=false
spring.datasource.username=root
spring.datasource.password=mysql123

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto = update

spring.jackson.serialization.fail-on-empty-beans=false


























## PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/librarymanagement
#spring.datasource.username=postgres
#spring.datasource.password=123

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1


#spring.datasource.driverClassName=org.postgresql.Driver

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=update


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


